apiVersion: apps/v1
kind: Deployment
metadata:
  name: centridesk-backend
  labels:
    app: centridesk-backend
spec:
  replicas: 2
  selector:
    matchLabels:
      app: centridesk-backend
  template:
    metadata:
      labels:
        app: centridesk-backend
    spec:
      topologySpreadConstraints:
      - maxSkew: 1
        topologyKey: topology.kubernetes.io/zone
        whenUnsatisfiable: ScheduleAnyway
        labelSelector:
          matchLabels:
            app: centridesk-backend
      containers:
        - name: centridesk-backend
          image: 079167517156.dkr.ecr.eu-central-1.amazonaws.com/centridesk_backend/centridesk_backend:latest
          imagePullPolicy: Always
          ports:
          - containerPort: 8080
          resources:
            requests:
              memory: "128Mi"
              cpu: "256m"
            limits:
              memory: "256Mi"
              cpu: "512m"
          livenessProbe:
            httpGet:
              path: /api/v1/status
              port: 8080
            initialDelaySeconds: 120
            periodSeconds: 60
            timeoutSeconds: 30
          readinessProbe:
            httpGet:
              path: /api/v1/status
              port: 8080
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 30
          volumeMounts:
            - name: config-json
              mountPath: "/code/config.json"
              subPath: config.json
      volumes:
        - name: config-json
          secret:
            secretName: centridesk-backend-database-secrets
---
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  name: centridesk-backend
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: centridesk-backend
  minReplicas: 2
  maxReplicas: 32
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 50
---
apiVersion: v1
kind: Service
metadata:
  name: centridesk-backend
spec:
  selector:
    app: centridesk-backend
  type: NodePort
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: 8080
